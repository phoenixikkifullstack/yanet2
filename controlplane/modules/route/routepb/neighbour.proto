syntax = "proto3";

package routepb;

option go_package = "github.com/yanet-platform/yanet2/controlplane/modules/route/routepb;routepb";

import "macaddr.proto";

// Neighbour is a service for viewing and managing neighbors.
service Neighbour {
	// List returns all current neighbors.
	rpc List(ListNeighboursRequest) returns (ListNeighboursResponse) {
	}
}

// ListNeighboursRequest is the request to list all neighbors.
message ListNeighboursRequest {
}

// ListNeighboursResponse contains the list of all current neighbors.
message ListNeighboursResponse {
	repeated NeighbourEntry neighbours = 1;
}

// NeighbourState represents the state of a neighbor entry.
enum NeighbourState {
	NUD_NONE = 0x00;
	NUD_INCOMPLETE = 0x01;
	NUD_REACHABLE = 0x02;
	NUD_STALE = 0x04;
	NUD_DELAY = 0x08;
	NUD_PROBE = 0x10;
	NUD_FAILED = 0x20;
	NUD_NOARP = 0x40;
	NUD_PERMANENT = 0x80;
	NUD_UNKNOWN = 0xff;
}

// NeighbourEntry represents a single neighbor entry.
message NeighbourEntry {
	// NextHop is the IP address of the next hop.
	string next_hop = 1;

	// LinkAddr is the MAC address of the next hop.
	MACAddress link_addr = 2;

	// HardwareAddr is the MAC address of the local interface.
	MACAddress hardware_addr = 3;

	// State is the state of the neighbor entry.
	NeighbourState state = 4;

	// UpdatedAt is the timestamp when this entry was last updated.
	// This is a UNIX timestamp in seconds.
	int64 updated_at = 5;
}
