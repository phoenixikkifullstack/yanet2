name: Build YANET

on:
  push:
    branches: ["main"]
    paths: ["**.h", "**.c", "**/meson.build"]
  pull_request:
    branches: ["main"]
    paths: ["**.h", "**.c", "**/meson.build"]

jobs:
  build:
    runs-on: ubuntu-24.04    
    env:
      cache_name: build-and-test

    steps:      
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: meson clang python3-pyelftools libnuma-dev libpcap-dev git
          version: 1.1

      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: hendrikmuhs/ccache-action@v1.2.11
        name: ccache
        with:
          key: ${{ runner.os }}-build-cache
      - run: |
          meson setup build -Dbuildtype=debug
          meson compile -C build

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          cache: false
          check-latest: true
      # https://github.com/actions/setup-go/issues/358
      - name: Get Go environment
        run: |
          echo "cache=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV
      - name: Set up go cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.cache }}
            ${{ env.modcache }}
          key: ${{ env.cache_name }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ env.cache_name }}-${{ runner.os }}-go-

      - name: Build and run tests
        run: |
          echo "Pre-run go build to bypass Meson test timeouts"
          go build -C tests/go ./...
          meson test -C build
      - name: Show meson test log
        run:
          grep -v 'Inherited environment' build/meson-logs/testlog.txt

      - uses: cpp-linter/cpp-linter-action@main
        id: linter
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          database: build
          style: file
          # Use .clang-tidy config file.
          tidy-checks: ''
          version: 19
          thread-comments: false
          step-summary: true
          tidy-review: false
          format-review: false
          files-changed-only: true
          ignore: '.github|build'
      - name: Check code style violation
        if: steps.linter.outputs.clang-tidy-checks-failed > 0
        run: exit 1
